// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/04/2022 15:19:33"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          EE243Lab4
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module EE243Lab4_vlg_vec_tst();
// constants                                           
// general purpose registers
reg in1;
reg in2;
reg in3;
reg in4;
reg in5;
reg inA0;
reg inA1;
reg inA2;
reg inA3;
reg inB0;
reg inB1;
reg inB2;
reg inB3;
reg M;
// wires                                               
wire output1;
wire output2;
wire output3;
wire output4;

// assign statements (if any)                          
EE243Lab4 i1 (
// port map - connection between master ports and signals/registers   
	.in1(in1),
	.in2(in2),
	.in3(in3),
	.in4(in4),
	.in5(in5),
	.inA0(inA0),
	.inA1(inA1),
	.inA2(inA2),
	.inA3(inA3),
	.inB0(inB0),
	.inB1(inB1),
	.inB2(inB2),
	.inB3(inB3),
	.M(M),
	.output1(output1),
	.output2(output2),
	.output3(output3),
	.output4(output4)
);
initial 
begin 
#1000000 $finish;
end 

// in2
initial
begin
	repeat(6)
	begin
		in2 = 1'b0;
		in2 = #80000 1'b1;
		# 80000;
	end
	in2 = 1'b0;
end 

// in3
initial
begin
	repeat(12)
	begin
		in3 = 1'b0;
		in3 = #40000 1'b1;
		# 40000;
	end
	in3 = 1'b0;
end 

// in4
always
begin
	in4 = 1'b0;
	in4 = #20000 1'b1;
	#20000;
end 

// in5
always
begin
	in5 = 1'b0;
	in5 = #10000 1'b1;
	#10000;
end 

// inA0
initial
begin
	inA0 = 1'b1;
end 

// inA1
initial
begin
	inA1 = 1'b0;
end 

// inA2
initial
begin
	inA2 = 1'b1;
end 

// inA3
initial
begin
	inA3 = 1'b1;
end 

// inB0
initial
begin
	inB0 = 1'b1;
end 

// inB1
initial
begin
	inB1 = 1'b1;
end 

// inB2
initial
begin
	inB2 = 1'b0;
end 

// inB3
initial
begin
	inB3 = 1'b0;
end 

// M
initial
begin
	M = 1'b0;
end 

// in1
initial
begin
	in1 = 1'b1;
end 
endmodule

