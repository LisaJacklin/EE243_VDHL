// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/04/2022 14:26:56"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          EE243Lab4
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module EE243Lab4_vlg_vec_tst();
// constants                                           
// general purpose registers
reg in1;
reg INPUT1;
reg INPUT2;
reg INPUT3;
reg INPUT4;
reg INPUT5;
reg INPUT6;
reg INPUT7;
reg INPUT8;
reg INPUT9;
reg INPUT10;
reg INPUT11;
reg INPUT12;
reg INPUT13;
// wires                                               
wire output1;
wire output2;
wire output3;
wire output4;

// assign statements (if any)                          
EE243Lab4 i1 (
// port map - connection between master ports and signals/registers   
	.in1(in1),
	.INPUT1(INPUT1),
	.INPUT2(INPUT2),
	.INPUT3(INPUT3),
	.INPUT4(INPUT4),
	.INPUT5(INPUT5),
	.INPUT6(INPUT6),
	.INPUT7(INPUT7),
	.INPUT8(INPUT8),
	.INPUT9(INPUT9),
	.INPUT10(INPUT10),
	.INPUT11(INPUT11),
	.INPUT12(INPUT12),
	.INPUT13(INPUT13),
	.output1(output1),
	.output2(output2),
	.output3(output3),
	.output4(output4)
);
initial 
begin 
#1000000 $finish;
end 

// in1
initial
begin
	in1 = 1'b0;
end 

// INPUT1
initial
begin
	INPUT1 = 1'b0;
end 

// INPUT2
initial
begin
	INPUT2 = 1'b0;
end 

// INPUT3
initial
begin
	INPUT3 = 1'b0;
end 

// INPUT4
initial
begin
	INPUT4 = 1'b0;
end 

// INPUT5
initial
begin
	INPUT5 = 1'b0;
end 

// INPUT6
initial
begin
	INPUT6 = 1'b0;
end 

// INPUT7
initial
begin
	INPUT7 = 1'b0;
end 

// INPUT8
initial
begin
	INPUT8 = 1'b0;
	INPUT8 = #960000 1'b1;
end 

// INPUT9
initial
begin
	INPUT9 = 1'b0;
	INPUT9 = #480000 1'b1;
	INPUT9 = #480000 1'b0;
end 

// INPUT10
initial
begin
	repeat(2)
	begin
		INPUT10 = 1'b0;
		INPUT10 = #240000 1'b1;
		# 240000;
	end
	INPUT10 = 1'b0;
end 

// INPUT11
initial
begin
	repeat(4)
	begin
		INPUT11 = 1'b0;
		INPUT11 = #120000 1'b1;
		# 120000;
	end
	INPUT11 = 1'b0;
end 

// INPUT12
initial
begin
	repeat(8)
	begin
		INPUT12 = 1'b0;
		INPUT12 = #60000 1'b1;
		# 60000;
	end
	INPUT12 = 1'b0;
end 

// INPUT13
initial
begin
	repeat(16)
	begin
		INPUT13 = 1'b0;
		INPUT13 = #30000 1'b1;
		# 30000;
	end
	INPUT13 = 1'b0;
	INPUT13 = #30000 1'b1;
end 
endmodule

